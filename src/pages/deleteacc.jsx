import Head from "next/head";
import withSession from "~/lib/Session";
import { useRouter } from "next/router";
import { useForm } from "react-hook-form";
import Link from "next/link";
import toast, { Toaster } from "react-hot-toast";
import { PrismaClient } from "@prisma/client";
import { useState } from 'react'; 
import Script from 'next/script'
const prisma = new PrismaClient();


export default function Home({ account }) {

console.log(account.username)
  const [loading, setLoading] = useState(false);
  const router = useRouter();
  
  const deletePost = async postId => {
    try {
      setLoading(true);
      await fetch('/api/delete',{
        method: "DELETE",
        body: JSON.stringify({ postId }),
      });

      setLoading(false);
      await router.push("/");
    } catch (error) {
      console.log("error", error);
      setLoading(false);
    }

  }
 
  async function handleLogout() {
    await fetch('/api/logout', {
      method: 'POST',
      headers : { 
        'Content-Type': 'application/json',
      }
    })
    router.push('/login')
  }


  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
        <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-GLhlTQ8iRABdZLl6O3oVMWSktQOp6b7In1Zl3/Jr59b6EGGoI1aFkw7cmDA6j6gD" crossorigin="anonymous"/>
      </Head>
      
      <nav className="navbar bg-body-tertiary bg-dark" data-bs-theme="dark">
  <form className="container-fluid justify-content-start">
    <button className="btn btn-outline-success me-2" type="button">Main button</button>
    <button className="btn btn-sm btn-outline-secondary" type="button">Smaller button</button>
  </form>
</nav>

      <form action="/api/form" method="post">
  <label for="first">First name:</label>
  <input type="text" id="first" name="first" />
  <button type="submt" className="w-full px-5 py-3 border border-yellow-300 focus:outline-none" onClick={handleLogout}>Logout</button>
  
</form>
    </div>
  );
}
export const getServerSideProps = withSession(async function ({ req, res }) {
  //check the user session
  
  const user = req.session.get('user')
  console.log(user.username)
  if (!user) {
    return {
      redirect: {
        destination: '/login',
        permanent: false,
      },
    }
  }
//update password
 


  //get the user from the database
  const account = await prisma.user.findFirst({
    where: {
      username: req.session.get('user').username
    }
  })


  return {
    props: {
      account
    }
  }
})